// Theme toggle (persists in localStorage)
(function () {
  var toggle = document.getElementById('themeToggle');
  var mobileToggle = document.getElementById('mobileThemeToggle');
  function setIcons(isDark) {
    if (toggle) toggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
    if (mobileToggle) mobileToggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
  }
  var saved = localStorage.getItem('theme');
  if (saved === 'dark') {
    document.documentElement.classList.add('dark');
    setIcons(true);
  } else {
    setIcons(false);
  }
  function onToggle() {
    var isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    setIcons(isDark);
  }
  if (toggle) toggle.addEventListener('click', onToggle);
  if (mobileToggle) mobileToggle.addEventListener('click', onToggle);
})();

// Smooth scroll for internal anchors
(function () {
  var links = document.querySelectorAll('a[href^="#"]');
  links.forEach(function (link) {
    link.addEventListener('click', function (e) {
      var targetId = link.getAttribute('href').slice(1);
      if (!targetId) return;
      var target = document.getElementById(targetId);
      if (target) {
        e.preventDefault();
        target.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    });
  });
})();

// Back to Top button logic
(function () {
  var btn = document.getElementById('backToTop');
  if (!btn) return;
  var toggleVisibility = function () {
    if (window.scrollY > 400) {
      btn.classList.add('show');
    } else {
      btn.classList.remove('show');
    }
  };
  window.addEventListener('scroll', toggleVisibility, { passive: true });
  toggleVisibility();
  btn.addEventListener('click', function () {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  });
})();

// Hamburger + mobile menu
(function () {
  var burger = document.getElementById('hamburger');
  var menu = document.getElementById('mobileMenu');
  if (!burger || !menu) return;

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
  function closeMenu() {
    burger.classList.remove('active');
    menu.classList.remove('active');
    burger.setAttribute('aria-expanded', 'false');
    document.body.classList.remove('no-scroll');
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  var closeOnNavigate = function (e) {
    if (e.target.matches('a[href^="#"]')) {
      closeMenu();
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –≥–∞–º–±—É—Ä–≥–µ—Ä—É
  burger.addEventListener('click', function () {
    var isActive = burger.classList.toggle('active');
    menu.classList.toggle('active');
    burger.setAttribute('aria-expanded', String(isActive));
    if (isActive) {
      document.body.classList.add('no-scroll');
    } else {
      document.body.classList.remove('no-scroll');
    }
  });

  menu.addEventListener('click', closeOnNavigate);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
  document.addEventListener('click', function (e) {
    if (!menu.classList.contains('active')) return;
    if (!menu.contains(e.target) && !burger.contains(e.target)) {
      closeMenu();
    }
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ Esc
  document.addEventListener('keydown', function (e) {
    if (e.key === 'Escape' && menu.classList.contains('active')) {
      closeMenu();
    }
  });
})();

// Top scroll progress bar

// –í–µ—Å—å –±–ª–æ–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
(function () {
  var bar = document.createElement('div');
  bar.setAttribute('aria-hidden', 'true');
  bar.style.position = 'fixed';
  bar.style.top = '0';
  bar.style.left = '0';
  bar.style.height = '3px';
  bar.style.width = '0%';
  bar.style.zIndex = '1002';
  bar.style.transition = 'width .1s linear';
  document.body.appendChild(bar);

  // –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ü–≤–µ—Ç–∞ –ø–æ–ª–æ—Å—ã
  function applyBarColor() {
    try {
      var accent = getComputedStyle(document.documentElement).getPropertyValue('--accent').trim();
      if (accent) bar.style.background = accent;
    } catch (e) {}
  }
  applyBarColor();

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  function update() {
    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
    var scrollHeight = (document.documentElement.scrollHeight || document.body.scrollHeight) - window.innerHeight;
    var pct = scrollHeight > 0 ? (scrollTop / scrollHeight) * 100 : 0;
    bar.style.width = pct + '%';
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π, –æ–±–Ω–æ–≤–ª—è–π –ø–æ–ª–æ—Å—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
  window.addEventListener('scroll', update, { passive: true });
  window.addEventListener('resize', update);
  update();

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã, –∏–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç –ø–æ —Ç–µ–º–µ
  try {
    var obs = new MutationObserver(function () { applyBarColor(); });
    obs.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
  } catch (e) {}
})();

// (removed) Active nav item on scroll

// Contact form enhancements: validation + toast success

// –ù–∞–π–¥–∏ —Ñ–æ—Ä–º—É –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤. –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–π
(function () {
  var form = document.querySelector('.contact-form');
  if (!form) return;

  // –ü–æ–∫–∞–∂–∏ –æ—à–∏–±–∫—É –ø–æ–¥ –ø–æ–ª–µ–º: –¥–æ–±–∞–≤—å –∫—Ä–∞—Å–Ω—É—é —Ä–∞–º–∫—É –∫ –ø–æ–ª—é –∏ —Å–æ–∑–¥–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –æ—à–∏–±–∫–∏
  function showError(input, msg) {
    input.classList.add('input-error');
    var id = input.name + '-error';
    var el = document.getElementById(id);
    if (!el) {
      el = document.createElement('div');
      el.id = id;
      el.className = 'error-text';
      input.insertAdjacentElement('afterend', el);
    }
    el.textContent = msg;
  }

  // –£–±–µ—Ä–∏ –æ—à–∏–±–∫—É —Å –ø–æ–ª—è: —Å–Ω–∏–º–∏ –∫—Ä–∞—Å–Ω—É—é —Ä–∞–º–∫—É –∏ –æ—á–∏—Å—Ç–∏ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
  function clearError(input) {
    input.classList.remove('input-error');
    var el = document.getElementById(input.name + '-error');
    if (el) el.textContent = '';
  }

  function validateEmail(value) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
  }

  function validatePhone(value) {
    return /^[+]?[-()\d\s]{7,20}$/.test(value);
  }

  // –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á—Ç–æ-—Ç–æ –≤–≤–æ–¥–∏—Ç –≤ –ª—é–±–æ–µ –ø–æ–ª–µ, —Å—Ä–∞–∑—É —É–±–µ—Ä–∏ –æ—à–∏–±–∫—É —Å —ç—Ç–æ–≥–æ –ø–æ–ª—è
  form.addEventListener('input', function (e) {
    var t = e.target;
    if (!(t && t.name)) return;
    clearError(t);
  }, { passive: true });

  // –ö–æ–≥–¥–∞ –ø—ã—Ç–∞—é—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É, –æ—Å—Ç–∞–Ω–æ–≤–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –∏ –ø–æ–ª—É—á–∏ –≤—Å–µ –ø–æ–ª—è
  form.addEventListener('submit', function (e) {
    e.preventDefault();
    var name = form.elements['name'];
    var email = form.elements['email'];
    var phone = form.elements['phone'];
    var message = form.elements['message'];

    // –ü—Ä–æ–≤–µ—Ä—å –∫–∞–∂–¥–æ–µ –ø–æ–ª–µ.  –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ - –ø–æ–∫–∞–∂–∏ –æ—à–∏–±–∫—É –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å
    var ok = true;
    if (!name.value.trim()) { showError(name, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è'); ok = false; }
    if (!validateEmail(email.value.trim())) { showError(email, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'); ok = false; }
    if (!validatePhone(phone.value.trim())) { showError(phone, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'); ok = false; }
    if (!message.value.trim()) { showError(message, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'); ok = false; }

    if (!ok) return;

    // –µ—Å–ª–∏ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, –æ—á–∏—Å—Ç–∏ —Ñ–æ—Ä–º—É (–∏–º–∏—Ç–∏—Ä—É—è —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É)
    name.value = '';
    email.value = '';
    phone.value = '';
    message.value = '';

    // –ü–æ–∫–∞–∂–∏ –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–∞–º–æ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    var toast = document.createElement('div');
    toast.className = 'toast';
    toast.textContent = '–°–ø–∞—Å–∏–±–æ! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–¥–µ–º–æ)';
    document.body.appendChild(toast);
    requestAnimationFrame(function () {
      toast.classList.add('show');
    });
    setTimeout(function () {
      toast.classList.remove('show');
      setTimeout(function () { if (toast && toast.parentNode) toast.parentNode.removeChild(toast); }, 250);
    }, 1800);
  });
})();
